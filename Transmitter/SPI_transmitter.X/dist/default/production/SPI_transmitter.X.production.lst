

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Sep 17 00:25:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  001A                     _RCREG	set	26
   170  0013                     _SSPBUF	set	19
   171  0065                     _RCIF	set	101
   172  00A4                     _CKP	set	164
   173  00A5                     _SSPEN	set	165
   174  00A3                     _SSPM3	set	163
   175  00A2                     _SSPM2	set	162
   176  00A1                     _SSPM1	set	161
   177  00A0                     _SSPM0	set	160
   178  00C4                     _CREN	set	196
   179  005F                     _GIE	set	95
   180  005E                     _PEIE	set	94
   181  00C7                     _SPEN	set	199
   182  0099                     _SPBRG	set	153
   183  043B                     _TRISC3	set	1083
   184  043C                     _TRISC4	set	1084
   185  043D                     _TRISC5	set	1085
   186  04A7                     _SMP	set	1191
   187  04A6                     _CKE	set	1190
   188  0465                     _RCIE	set	1125
   189  043F                     _TRISC7	set	1087
   190  043E                     _TRISC6	set	1086
   191  04C4                     _SYNC	set	1220
   192  04C2                     _BRGH	set	1218
   193                           
   194                           ; #config settings
   195  0000                     
   196                           	psect	cinit
   197  000F                     start_initialization:	
   198  000F                     __initialization:	
   199                           
   200                           ; Clear objects allocated to COMMON
   201  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   202  0010                     end_of_initialization:	
   203                           ;End of C runtime variable initialization code
   204                           
   205  0010                     __end_of__initialization:	
   206  0010  0183               	clrf	3
   207  0011  120A  118A  2850   	ljmp	_main	;jump to C main() function
   208                           
   209                           	psect	bssCOMMON
   210  0074                     __pbssCOMMON:	
   211  0074                     _Data:	
   212  0074                     	ds	1
   213                           
   214                           	psect	cstackCOMMON
   215  0070                     __pcstackCOMMON:	
   216  0070                     ?_UART_RX_Init:	
   217  0070                     ?_SPI_Master_Init:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     ?_main:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?_SPI_Write:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ??_SPI_Write:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_ISR:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     SPI_Write@Data:	
   233                           ; 1 bytes @ 0x0
   234                           
   235                           
   236                           ; 1 bytes @ 0x0
   237  0070                     	ds	1
   238  0071                     ??_ISR:	
   239                           
   240                           ; 1 bytes @ 0x1
   241  0071                     	ds	3
   242  0074                     ??_UART_RX_Init:	
   243  0074                     ??_SPI_Master_Init:	
   244                           ; 1 bytes @ 0x4
   245                           
   246  0074                     ??_main:	
   247                           ; 1 bytes @ 0x4
   248                           
   249                           
   250                           	psect	maintext
   251  0050                     __pmaintext:	
   252                           ; 1 bytes @ 0x4
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 24 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0, pclath, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : B00/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   272 ;;      Params:         0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels required when called:    3
   278 ;; This function calls:
   279 ;;		_SPI_Master_Init
   280 ;;		_UART_RX_Init
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           
   287                           ;psect for function _main
   288  0050                     _main:	
   289  0050                     l693:	
   290                           ;incstack = 0
   291                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   292                           
   293                           
   294                           ;main.c: 26:     UART_RX_Init();
   295  0050  120A  118A  202C  120A  118A  	fcall	_UART_RX_Init
   296  0055                     l695:	
   297                           
   298                           ;main.c: 27:     SPI_Master_Init();
   299  0055  120A  118A  2040  120A  118A  	fcall	_SPI_Master_Init
   300  005A                     l60:	
   301  005A  120A  118A  280C   	ljmp	start
   302  005D                     __end_of_main:	
   303                           
   304                           	psect	text1
   305  002C                     __ptext1:	
   306 ;; *************** function _UART_RX_Init *****************
   307 ;; Defined at:
   308 ;;		line 33 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   322 ;;      Params:         0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; Hardware stack levels required when called:    2
   329 ;; This function calls:
   330 ;;		Nothing
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           
   337                           ;psect for function _UART_RX_Init
   338  002C                     _UART_RX_Init:	
   339  002C                     l669:	
   340                           ;incstack = 0
   341                           ; Regs used in _UART_RX_Init: [wreg]
   342                           
   343                           
   344                           ;main.c: 35:   BRGH = 1;
   345  002C  1683               	bsf	3,5	;RP0=1, select bank1
   346  002D  1303               	bcf	3,6	;RP1=0, select bank1
   347  002E  1518               	bsf	24,2	;volatile
   348  002F                     l671:	
   349                           
   350                           ;main.c: 36:   SPBRG = 25;
   351  002F  3019               	movlw	25
   352  0030  0099               	movwf	25	;volatile
   353  0031                     l673:	
   354                           
   355                           ;main.c: 38:   SYNC = 0;
   356  0031  1218               	bcf	24,4	;volatile
   357  0032                     l675:	
   358                           
   359                           ;main.c: 39:   SPEN = 1;
   360  0032  1283               	bcf	3,5	;RP0=0, select bank0
   361  0033  1303               	bcf	3,6	;RP1=0, select bank0
   362  0034  1798               	bsf	24,7	;volatile
   363  0035                     l677:	
   364                           
   365                           ;main.c: 41:   TRISC6 = 1;
   366  0035  1683               	bsf	3,5	;RP0=1, select bank1
   367  0036  1303               	bcf	3,6	;RP1=0, select bank1
   368  0037  1707               	bsf	7,6	;volatile
   369  0038                     l679:	
   370                           
   371                           ;main.c: 42:   TRISC7 = 1;
   372  0038  1787               	bsf	7,7	;volatile
   373  0039                     l681:	
   374                           
   375                           ;main.c: 44:   RCIE = 1;
   376  0039  168C               	bsf	12,5	;volatile
   377  003A                     l683:	
   378                           
   379                           ;main.c: 45:   PEIE = 1;
   380  003A  170B               	bsf	11,6	;volatile
   381  003B                     l685:	
   382                           
   383                           ;main.c: 46:   GIE = 1;
   384  003B  178B               	bsf	11,7	;volatile
   385  003C                     l687:	
   386                           
   387                           ;main.c: 48:   CREN = 1;
   388  003C  1283               	bcf	3,5	;RP0=0, select bank0
   389  003D  1303               	bcf	3,6	;RP1=0, select bank0
   390  003E  1618               	bsf	24,4	;volatile
   391  003F                     l65:	
   392  003F  0008               	return
   393  0040                     __end_of_UART_RX_Init:	
   394                           
   395                           	psect	text2
   396  0040                     __ptext2:	
   397 ;; *************** function _SPI_Master_Init *****************
   398 ;; Defined at:
   399 ;;		line 52 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		None
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; Hardware stack levels required when called:    2
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           
   428                           ;psect for function _SPI_Master_Init
   429  0040                     _SPI_Master_Init:	
   430  0040                     l689:	
   431                           ;incstack = 0
   432                           ; Regs used in _SPI_Master_Init: []
   433                           
   434                           
   435                           ;main.c: 55:   SSPM0 = 0;
   436  0040  1283               	bcf	3,5	;RP0=0, select bank0
   437  0041  1303               	bcf	3,6	;RP1=0, select bank0
   438  0042  1014               	bcf	20,0	;volatile
   439                           
   440                           ;main.c: 56:   SSPM1 = 0;
   441  0043  1094               	bcf	20,1	;volatile
   442                           
   443                           ;main.c: 57:   SSPM2 = 0;
   444  0044  1114               	bcf	20,2	;volatile
   445                           
   446                           ;main.c: 58:   SSPM3 = 0;
   447  0045  1194               	bcf	20,3	;volatile
   448                           
   449                           ;main.c: 60:   SSPEN = 1;
   450  0046  1694               	bsf	20,5	;volatile
   451                           
   452                           ;main.c: 62:   CKP = 1;
   453  0047  1614               	bsf	20,4	;volatile
   454                           
   455                           ;main.c: 63:   CKE = 1;
   456  0048  1683               	bsf	3,5	;RP0=1, select bank1
   457  0049  1303               	bcf	3,6	;RP1=0, select bank1
   458  004A  1714               	bsf	20,6	;volatile
   459                           
   460                           ;main.c: 65:   SMP = 0;
   461  004B  1394               	bcf	20,7	;volatile
   462                           
   463                           ;main.c: 67:   TRISC5 = 0;
   464  004C  1287               	bcf	7,5	;volatile
   465                           
   466                           ;main.c: 68:   TRISC4 = 1;
   467  004D  1607               	bsf	7,4	;volatile
   468                           
   469                           ;main.c: 69:   TRISC3 = 0;
   470  004E  1187               	bcf	7,3	;volatile
   471  004F                     l68:	
   472  004F  0008               	return
   473  0050                     __end_of_SPI_Master_Init:	
   474                           
   475                           	psect	text3
   476  0014                     __ptext3:	
   477 ;; *************** function _ISR *****************
   478 ;; Defined at:
   479 ;;		line 78 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          3       0       0       0       0
   496 ;;      Totals:         3       0       0       0       0
   497 ;;Total ram usage:        3 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    1
   500 ;; This function calls:
   501 ;;		_SPI_Write
   502 ;; This function is called by:
   503 ;;		Interrupt level 1
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _ISR
   509  0014                     _ISR:	
   510  0014                     i1l699:	
   511                           
   512                           ;main.c: 80:   if (RCIF == 1)
   513  0014  1283               	bcf	3,5	;RP0=0, select bank0
   514  0015  1303               	bcf	3,6	;RP1=0, select bank0
   515  0016  1E8C               	btfss	12,5	;volatile
   516  0017  2819               	goto	u1_21
   517  0018  281A               	goto	u1_20
   518  0019                     u1_21:	
   519  0019  281F               	goto	i1l705
   520  001A                     u1_20:	
   521  001A                     i1l701:	
   522                           
   523                           ;main.c: 81:   {;main.c: 82:     Data = RCREG;
   524  001A  081A               	movf	26,w	;volatile
   525  001B  00F1               	movwf	??_ISR
   526  001C  0871               	movf	??_ISR,w
   527  001D  00F4               	movwf	_Data
   528  001E                     i1l703:	
   529                           
   530                           ;main.c: 83:     RCIF = 0;
   531  001E  128C               	bcf	12,5	;volatile
   532  001F                     i1l705:	
   533                           
   534                           ;main.c: 85:   SPI_Write(Data);
   535  001F  0874               	movf	_Data,w
   536  0020  120A  118A  205D  120A  118A  	fcall	_SPI_Write
   537  0025                     i1l77:	
   538  0025  0873               	movf	??_ISR+2,w
   539  0026  008A               	movwf	10
   540  0027  0E72               	swapf	(??_ISR+1)^(0+4294967168),w
   541  0028  0083               	movwf	3
   542  0029  0EFE               	swapf	btemp,f
   543  002A  0E7E               	swapf	btemp,w
   544  002B  0009               	retfie
   545  002C                     __end_of_ISR:	
   546                           
   547                           	psect	intentry
   548  0004                     __pintentry:	
   549                           ;incstack = 0
   550                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   551                           
   552  0004                     interrupt_function:	
   553  007E                     saved_w	set	btemp
   554  0004  00FE               	movwf	btemp
   555  0005  0E03               	swapf	3,w
   556  0006  00F2               	movwf	??_ISR+1
   557  0007  080A               	movf	10,w
   558  0008  00F3               	movwf	??_ISR+2
   559  0009  120A  118A  2814   	ljmp	_ISR
   560                           
   561                           	psect	text4
   562  005D                     __ptext4:	
   563 ;; *************** function _SPI_Write *****************
   564 ;; Defined at:
   565 ;;		line 72 in file "main.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;  Data            1    wreg     unsigned char 
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  Data            1    0[COMMON] unsigned char 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       0       0       0       0
   580 ;;      Locals:         1       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0
   582 ;;      Totals:         1       0       0       0       0
   583 ;;Total ram usage:        1 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_ISR
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _SPI_Write
   594  005D                     _SPI_Write:	
   595                           
   596                           ;incstack = 0
   597                           ; Regs used in _SPI_Write: [wreg]
   598                           ;SPI_Write@Data stored from wreg
   599  005D  00F0               	movwf	SPI_Write@Data
   600  005E                     i1l691:	
   601                           
   602                           ;main.c: 72: void SPI_Write(uint8_t Data);main.c: 73: {;main.c: 74:   SSPBUF = Data;
   603  005E  0870               	movf	SPI_Write@Data,w
   604  005F  1283               	bcf	3,5	;RP0=0, select bank0
   605  0060  1303               	bcf	3,6	;RP1=0, select bank0
   606  0061  0093               	movwf	19	;volatile
   607  0062                     i1l71:	
   608  0062  0008               	return
   609  0063                     __end_of_SPI_Write:	
   610  007E                     btemp	set	126	;btemp
   611  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _SPI_Master_Init
                       _UART_RX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_RX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Master_Init
   _UART_RX_Init

 _ISR (ROOT)
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Sep 17 00:25:33 2020

         _SPI_Master_Init 0040               __CFG_CP$OFF 0000                        l60 005A  
                      l65 003F                        l68 004F                       l671 002F  
                     l681 0039                       l673 0031                       l683 003A  
                     l675 0032                       l685 003B                       l677 0035  
                     l669 002C                       l693 0050                       l687 003C  
                     l679 0038                       l695 0055                       _CKE 04A6  
                     l689 0040                       _CKP 00A4                       _GIE 005F  
            __CFG_CPD$OFF 0000                       _ISR 0014                       _SMP 04A7  
            __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    _BRGH 04C2                      _CREN 00C4                      _PEIE 005E  
                    _RCIE 0465                      _RCIF 0065                      i1l71 0062  
                    i1l77 0025                      _SPEN 00C7                      _SYNC 04C4  
                    _Data 0074                      u1_20 001A                      u1_21 0019  
            __CFG_WRT$OFF 0000                      _main 0050                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 000C                     ??_ISR 0071  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     i1l701 001A  
                   i1l703 001E                     i1l705 001F                     i1l691 005E  
                   i1l699 0014                     _RCREG 001A                     _SPBRG 0099  
                   _SSPM0 00A0                     _SSPM1 00A1                     _SSPM2 00A2  
                   _SSPM3 00A3                     _SSPEN 00A5             __CFG_PWRTE$ON 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
 __end_of_SPI_Master_Init 0050        __size_of_SPI_Write 0006           __initialization 000F  
            __end_of_main 005D                    ??_main 0074                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC5 043D                    _TRISC6 043E  
                  _TRISC7 043F                    _SSPBUF 0013         __end_of_SPI_Write 0063  
                  saved_w 007E   __end_of__initialization 0010          ?_SPI_Master_Init 0070  
          __pcstackCOMMON 0070                __pmaintext 0050                __pintentry 0004  
           ?_UART_RX_Init 0070             SPI_Write@Data 0070                   __ptext1 002C  
                 __ptext2 0040                   __ptext3 0014                   __ptext4 005D  
            __size_of_ISR 0018            ??_UART_RX_Init 0074      end_of_initialization 0010  
               _SPI_Write 005D       start_initialization 000F               __end_of_ISR 002C  
              ?_SPI_Write 0070      __end_of_UART_RX_Init 0040  __size_of_SPI_Master_Init 0010  
             __pbssCOMMON 0074                 ___latbits 0002               ??_SPI_Write 0070  
       interrupt_function 0004         ??_SPI_Master_Init 0074     __size_of_UART_RX_Init 0014  
            _UART_RX_Init 002C             __size_of_main 000D                  intlevel1 0000  
