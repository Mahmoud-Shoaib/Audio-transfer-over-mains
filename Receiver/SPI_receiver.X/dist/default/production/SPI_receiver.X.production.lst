

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Sep 17 00:31:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0013                     _SSPBUF	set	19
   170  0019                     _TXREG	set	25
   171  0063                     _SSPIF	set	99
   172  005F                     _GIE	set	95
   173  005E                     _PEIE	set	94
   174  00A4                     _CKP	set	164
   175  00A5                     _SSPEN	set	165
   176  00A3                     _SSPM3	set	163
   177  00A2                     _SSPM2	set	162
   178  00A1                     _SSPM1	set	161
   179  00A0                     _SSPM0	set	160
   180  00C7                     _SPEN	set	199
   181  0099                     _SPBRG	set	153
   182  0463                     _SSPIE	set	1123
   183  042D                     _TRISA5	set	1069
   184  04F8                     _PCFG0	set	1272
   185  04F9                     _PCFG1	set	1273
   186  04FA                     _PCFG2	set	1274
   187  04FB                     _PCFG3	set	1275
   188  043B                     _TRISC3	set	1083
   189  043C                     _TRISC4	set	1084
   190  043D                     _TRISC5	set	1085
   191  04A7                     _SMP	set	1191
   192  04A6                     _CKE	set	1190
   193  04C1                     _TRMT	set	1217
   194  04C5                     _TXEN	set	1221
   195  043F                     _TRISC7	set	1087
   196  043E                     _TRISC6	set	1086
   197  04C4                     _SYNC	set	1220
   198  04C2                     _BRGH	set	1218
   199                           
   200                           ; #config settings
   201  0000                     
   202                           	psect	cinit
   203  000F                     start_initialization:	
   204  000F                     __initialization:	
   205                           
   206                           ; Clear objects allocated to COMMON
   207  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   208  0010                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211  0010                     __end_of__initialization:	
   212  0010  0183               	clrf	3
   213  0011  120A  118A  2853   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	bssCOMMON
   216  0074                     __pbssCOMMON:	
   217  0074                     _Data:	
   218  0074                     	ds	1
   219                           
   220                           	psect	cstackCOMMON
   221  0070                     __pcstackCOMMON:	
   222  0070                     ?_SPI_Slave_Init:	
   223  0070                     ?_UART_TX_Init:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ?_main:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_UART_Write:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ??_UART_Write:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_ISR:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     UART_Write@data:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 1 bytes @ 0x0
   243  0070                     	ds	1
   244  0071                     ??_ISR:	
   245                           
   246                           ; 1 bytes @ 0x1
   247  0071                     	ds	3
   248  0074                     ??_SPI_Slave_Init:	
   249  0074                     ??_UART_TX_Init:	
   250                           ; 1 bytes @ 0x4
   251                           
   252  0074                     ??_main:	
   253                           ; 1 bytes @ 0x4
   254                           
   255                           
   256                           	psect	maintext
   257  0053                     __pmaintext:	
   258                           ; 1 bytes @ 0x4
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 23 in file "main.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;		None
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0, pclath, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : B00/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   278 ;;      Params:         0       0       0       0       0
   279 ;;      Locals:         0       0       0       0       0
   280 ;;      Temps:          0       0       0       0       0
   281 ;;      Totals:         0       0       0       0       0
   282 ;;Total ram usage:        0 bytes
   283 ;; Hardware stack levels required when called:    3
   284 ;; This function calls:
   285 ;;		_SPI_Slave_Init
   286 ;;		_UART_TX_Init
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           
   293                           ;psect for function _main
   294  0053                     _main:	
   295  0053                     l704:	
   296                           ;incstack = 0
   297                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   298                           
   299                           
   300                           ;main.c: 25:     SPI_Slave_Init();
   301  0053  120A  118A  2014  120A  118A  	fcall	_SPI_Slave_Init
   302  0058                     l706:	
   303                           
   304                           ;main.c: 26:     UART_TX_Init();
   305  0058  120A  118A  2044  120A  118A  	fcall	_UART_TX_Init
   306  005D                     l72:	
   307  005D  120A  118A  280C   	ljmp	start
   308  0060                     __end_of_main:	
   309                           
   310                           	psect	text1
   311  0044                     __ptext1:	
   312 ;; *************** function _UART_TX_Init *****************
   313 ;; Defined at:
   314 ;;		line 33 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   328 ;;      Params:         0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0
   330 ;;      Temps:          0       0       0       0       0
   331 ;;      Totals:         0       0       0       0       0
   332 ;;Total ram usage:        0 bytes
   333 ;; Hardware stack levels used:    1
   334 ;; Hardware stack levels required when called:    2
   335 ;; This function calls:
   336 ;;		Nothing
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           
   343                           ;psect for function _UART_TX_Init
   344  0044                     _UART_TX_Init:	
   345  0044                     l686:	
   346                           ;incstack = 0
   347                           ; Regs used in _UART_TX_Init: [wreg]
   348                           
   349                           
   350                           ;main.c: 35:   BRGH = 1;
   351  0044  1683               	bsf	3,5	;RP0=1, select bank1
   352  0045  1303               	bcf	3,6	;RP1=0, select bank1
   353  0046  1518               	bsf	24,2	;volatile
   354  0047                     l688:	
   355                           
   356                           ;main.c: 36:   SPBRG = 25;
   357  0047  3019               	movlw	25
   358  0048  0099               	movwf	25	;volatile
   359  0049                     l690:	
   360                           
   361                           ;main.c: 38:   SYNC = 0;
   362  0049  1218               	bcf	24,4	;volatile
   363  004A                     l692:	
   364                           
   365                           ;main.c: 39:   SPEN = 1;
   366  004A  1283               	bcf	3,5	;RP0=0, select bank0
   367  004B  1303               	bcf	3,6	;RP1=0, select bank0
   368  004C  1798               	bsf	24,7	;volatile
   369  004D                     l694:	
   370                           
   371                           ;main.c: 41:   TRISC6 = 1;
   372  004D  1683               	bsf	3,5	;RP0=1, select bank1
   373  004E  1303               	bcf	3,6	;RP1=0, select bank1
   374  004F  1707               	bsf	7,6	;volatile
   375  0050                     l696:	
   376                           
   377                           ;main.c: 42:   TRISC7 = 1;
   378  0050  1787               	bsf	7,7	;volatile
   379  0051                     l698:	
   380                           
   381                           ;main.c: 43:   TXEN = 1;
   382  0051  1698               	bsf	24,5	;volatile
   383  0052                     l77:	
   384  0052  0008               	return
   385  0053                     __end_of_UART_TX_Init:	
   386                           
   387                           	psect	text2
   388  0014                     __ptext2:	
   389 ;; *************** function _SPI_Slave_Init *****************
   390 ;; Defined at:
   391 ;;		line 52 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		None
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0
   408 ;;      Totals:         0       0       0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels used:    1
   411 ;; Hardware stack levels required when called:    2
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		_main
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _SPI_Slave_Init
   421  0014                     _SPI_Slave_Init:	
   422  0014                     l684:	
   423                           ;incstack = 0
   424                           ; Regs used in _SPI_Slave_Init: []
   425                           
   426                           
   427                           ;main.c: 55:   SSPM0 = 0;
   428  0014  1283               	bcf	3,5	;RP0=0, select bank0
   429  0015  1303               	bcf	3,6	;RP1=0, select bank0
   430  0016  1014               	bcf	20,0	;volatile
   431                           
   432                           ;main.c: 56:   SSPM1 = 0;
   433  0017  1094               	bcf	20,1	;volatile
   434                           
   435                           ;main.c: 57:   SSPM2 = 1;
   436  0018  1514               	bsf	20,2	;volatile
   437                           
   438                           ;main.c: 58:   SSPM3 = 0;
   439  0019  1194               	bcf	20,3	;volatile
   440                           
   441                           ;main.c: 60:   SSPEN = 1;
   442  001A  1694               	bsf	20,5	;volatile
   443                           
   444                           ;main.c: 62:   CKP = 1;
   445  001B  1614               	bsf	20,4	;volatile
   446                           
   447                           ;main.c: 63:   CKE = 1;
   448  001C  1683               	bsf	3,5	;RP0=1, select bank1
   449  001D  1303               	bcf	3,6	;RP1=0, select bank1
   450  001E  1714               	bsf	20,6	;volatile
   451                           
   452                           ;main.c: 65:   SMP = 0;
   453  001F  1394               	bcf	20,7	;volatile
   454                           
   455                           ;main.c: 67:   TRISC5 = 0;
   456  0020  1287               	bcf	7,5	;volatile
   457                           
   458                           ;main.c: 68:   TRISC4 = 1;
   459  0021  1607               	bsf	7,4	;volatile
   460                           
   461                           ;main.c: 69:   TRISC3 = 1;
   462  0022  1587               	bsf	7,3	;volatile
   463                           
   464                           ;main.c: 70:   PCFG3 = 0;
   465  0023  119F               	bcf	31,3	;volatile
   466                           
   467                           ;main.c: 71:   PCFG2 = 1;
   468  0024  151F               	bsf	31,2	;volatile
   469                           
   470                           ;main.c: 72:   PCFG1 = 0;
   471  0025  109F               	bcf	31,1	;volatile
   472                           
   473                           ;main.c: 73:   PCFG0 = 0;
   474  0026  101F               	bcf	31,0	;volatile
   475                           
   476                           ;main.c: 74:   TRISA5 = 1;
   477  0027  1685               	bsf	5,5	;volatile
   478                           
   479                           ;main.c: 76:   SSPIE = 1;
   480  0028  158C               	bsf	12,3	;volatile
   481                           
   482                           ;main.c: 77:   PEIE = 1;
   483  0029  170B               	bsf	11,6	;volatile
   484                           
   485                           ;main.c: 78:   GIE = 1;
   486  002A  178B               	bsf	11,7	;volatile
   487  002B                     l86:	
   488  002B  0008               	return
   489  002C                     __end_of_SPI_Slave_Init:	
   490                           
   491                           	psect	text3
   492  002C                     __ptext3:	
   493 ;; *************** function _ISR *****************
   494 ;; Defined at:
   495 ;;		line 81 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          3       0       0       0       0
   512 ;;      Totals:         3       0       0       0       0
   513 ;;Total ram usage:        3 bytes
   514 ;; Hardware stack levels used:    1
   515 ;; Hardware stack levels required when called:    1
   516 ;; This function calls:
   517 ;;		_UART_Write
   518 ;; This function is called by:
   519 ;;		Interrupt level 1
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _ISR
   525  002C                     _ISR:	
   526  002C                     i1l710:	
   527                           
   528                           ;main.c: 83:   if(SSPIF)
   529  002C  1283               	bcf	3,5	;RP0=0, select bank0
   530  002D  1303               	bcf	3,6	;RP1=0, select bank0
   531  002E  1D8C               	btfss	12,3	;volatile
   532  002F  2831               	goto	u2_21
   533  0030  2832               	goto	u2_20
   534  0031                     u2_21:	
   535  0031  2837               	goto	i1l716
   536  0032                     u2_20:	
   537  0032                     i1l712:	
   538                           
   539                           ;main.c: 84:   {;main.c: 85:     Data = SSPBUF;
   540  0032  0813               	movf	19,w	;volatile
   541  0033  00F1               	movwf	??_ISR
   542  0034  0871               	movf	??_ISR,w
   543  0035  00F4               	movwf	_Data
   544  0036                     i1l714:	
   545                           
   546                           ;main.c: 86:     SSPIF = 0;
   547  0036  118C               	bcf	12,3	;volatile
   548  0037                     i1l716:	
   549                           
   550                           ;main.c: 88:   UART_Write(Data);
   551  0037  0874               	movf	_Data,w
   552  0038  120A  118A  2060  120A  118A  	fcall	_UART_Write
   553  003D                     i1l92:	
   554  003D  0873               	movf	??_ISR+2,w
   555  003E  008A               	movwf	10
   556  003F  0E72               	swapf	(??_ISR+1)^(0+4294967168),w
   557  0040  0083               	movwf	3
   558  0041  0EFE               	swapf	btemp,f
   559  0042  0E7E               	swapf	btemp,w
   560  0043  0009               	retfie
   561  0044                     __end_of_ISR:	
   562                           
   563                           	psect	intentry
   564  0004                     __pintentry:	
   565                           ;incstack = 0
   566                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   567                           
   568  0004                     interrupt_function:	
   569  007E                     saved_w	set	btemp
   570  0004  00FE               	movwf	btemp
   571  0005  0E03               	swapf	3,w
   572  0006  00F2               	movwf	??_ISR+1
   573  0007  080A               	movf	10,w
   574  0008  00F3               	movwf	??_ISR+2
   575  0009  120A  118A  282C   	ljmp	_ISR
   576                           
   577                           	psect	text4
   578  0060                     __ptext4:	
   579 ;; *************** function _UART_Write *****************
   580 ;; Defined at:
   581 ;;		line 46 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  data            1    wreg     unsigned char 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  data            1    0[COMMON] unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         1       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         1       0       0       0       0
   599 ;;Total ram usage:        1 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_ISR
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           
   609                           ;psect for function _UART_Write
   610  0060                     _UART_Write:	
   611                           
   612                           ;incstack = 0
   613                           ; Regs used in _UART_Write: [wreg]
   614                           ;UART_Write@data stored from wreg
   615  0060  00F0               	movwf	UART_Write@data
   616  0061                     i1l700:	
   617  0061                     i1l80:	
   618                           ;main.c: 46: void UART_Write(uint8_t data);main.c: 47: {;main.c: 48:   while(!TRMT);
   619                           
   620  0061  1683               	bsf	3,5	;RP0=1, select bank1
   621  0062  1303               	bcf	3,6	;RP1=0, select bank1
   622  0063  1C98               	btfss	24,1	;volatile
   623  0064  2866               	goto	u1_21
   624  0065  2867               	goto	u1_20
   625  0066                     u1_21:	
   626  0066  2861               	goto	i1l80
   627  0067                     u1_20:	
   628  0067                     i1l702:	
   629                           
   630                           ;main.c: 49:   TXREG = data;
   631  0067  0870               	movf	UART_Write@data,w
   632  0068  1283               	bcf	3,5	;RP0=0, select bank0
   633  0069  1303               	bcf	3,6	;RP1=0, select bank0
   634  006A  0099               	movwf	25	;volatile
   635  006B                     i1l83:	
   636  006B  0008               	return
   637  006C                     __end_of_UART_Write:	
   638  007E                     btemp	set	126	;btemp
   639  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _SPI_Slave_Init
                       _UART_TX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Slave_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Slave_Init
   _UART_TX_Init

 _ISR (ROOT)
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Sep 17 00:31:54 2020

            __CFG_CP$OFF 0000                       l72 005D                       l77 0052  
                     l86 002B                      l704 0053                      l706 0058  
                    l690 0049                      l684 0014                      l692 004A  
                    l694 004D                      l686 0044                      _CKE 04A6  
                    l696 0050                      l688 0047                      l698 0051  
                    _CKP 00A4                      _GIE 005F             __CFG_CPD$OFF 0000  
                    _ISR 002C                      _SMP 04A7             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     ?_ISR 0070                     _BRGH 04C2  
                   _PEIE 005E                     i1l80 0061                     i1l83 006B  
                   i1l92 003D                     _SPEN 00C7                     _TRMT 04C1  
                   _TXEN 04C5                     _SYNC 04C4                     _Data 0074  
                   u1_20 0067                     u1_21 0066                     u2_20 0032  
                   u2_21 0031             __CFG_WRT$OFF 0000                     _main 0053  
                   btemp 007E            __CFG_BOREN$ON 0000           _SPI_Slave_Init 0014  
                   start 000C                    ??_ISR 0071                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PCFG0 04F8                    _PCFG1 04F9  
                  _PCFG2 04FA                    _PCFG3 04FB                    i1l700 0061  
                  i1l702 0067                    i1l710 002C                    i1l712 0032  
                  i1l714 0036                    i1l716 0037                    _SPBRG 0099  
                  _SSPM0 00A0                    _SSPM1 00A1                    _SSPM2 00A2  
                  _SSPM3 00A3                    _SSPIE 0463                    _SSPEN 00A5  
                  _SSPIF 0063                    _TXREG 0019            __CFG_PWRTE$ON 0000  
            ?_UART_Write 0070                    pclath 000A   __end_of_SPI_Slave_Init 002C  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0060                   ??_main 0074          ?_SPI_Slave_Init 0070  
                 _TRISA5 042D                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _TRISC6 043E                   _TRISC7 043F  
                 _SSPBUF 0013      __size_of_UART_Write 000C                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070               __pmaintext 0053  
             __pintentry 0004             ??_UART_Write 0070            ?_UART_TX_Init 0070  
     __end_of_UART_Write 006C                  __ptext1 0044                  __ptext2 0014  
                __ptext3 002C                  __ptext4 0060             __size_of_ISR 0018  
       ??_SPI_Slave_Init 0074           ??_UART_TX_Init 0074     end_of_initialization 0010  
         UART_Write@data 0070      start_initialization 000F              __end_of_ISR 0044  
   __end_of_UART_TX_Init 0053              __pbssCOMMON 0074                ___latbits 0002  
      interrupt_function 0004    __size_of_UART_TX_Init 000F             _UART_TX_Init 0044  
          __size_of_main 000D  __size_of_SPI_Slave_Init 0018                 intlevel1 0000  
             _UART_Write 0060  
